<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <title>Save My Invite</title>
    
</head>

<body style = "background-color:#F6F7F8;">
 
<!-- Hero section -->
<div class="px-4 py-5 my-5 text-center" id="hero">
    <h1 class="display-5 fw-bold" style = "color: #183642;">Welcome to SaveMyInvite</h1>
    <div class="col-lg-6 mx-auto">
      <p class="lead mb-5 mt-5">Planning your next social gathering or casual event? Introducing SaveMyInvite â€“ your go-to app to create a handy invite to share with friends and families and keep everyone in the loop effortlessly. Now, you can ensure that every important detail is readily available to add to your calendars so that no one misses out on the fun :) Try it today!</p>
      <p class="lead mb-5 mt-5" style="color:#313D5A; font-weight:normal;">Step 1: Create an invitation with the event details.<br/>Step 2: Copy the URL and share with your friends and families.<br/>Step 3: Click on the URL to add the event to your device's calendar directly.</p>
      <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
        <a type="button" class="btn btn-primary btn-lg px-4 gap-3" href="#main">Get Started!</a>
      </div>
    </div>
</div>

<!-- Main section -->

<div class="container shadow p-3 mb-5 rounded" id="main" style="background-color:#c9d6ea;">
    
    <h2 style="text-align: center; margin-bottom: 30px; margin-top: 30px; color:#313D5A;">Create your invitation</h2>
    
    <form id="eventForm" action="" method="post">
        <div class="form-group mb-3">
            <label for="eventTitle">Event Title:</label>
            <input type="text" class="form-control" id="eventTitle" placeholder ="Input your event title" required>
        </div>
        <div class="form-row">
            <div class="form-group mb-3">
                <label for="startDate">Start Date:</label>
                <input type="date" class="form-control" id="startDate" required>
            </div>
            <div class="form-group mb-3">
                <label for="startTime">Start Time:</label>
                <input type="time" class="form-control" id="startTime" required>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group mb-3">
                <label for="endDate">End Date:</label>
                <input type="date" class="form-control" id="endDate" required>
            </div>
            <div class="form-group mb-3">
                <label for="endTime">End Time:</label>
                <input type="time" class="form-control" id="endTime" required>
            </div>
        </div>
        <div class="form-group mb-3">
            <label for="location">Location:</label>
            <input type="text" class="form-control" id="location" placeholder ="Provide the location of your event" required>
        </div>
        <div class="form-group mb-3">
            <label for="description">Description:</label>
            <textarea class="form-control" id="description" rows="3" placeholder ="Provide any additional details" required></textarea>
        </div>
        <button type="submit" class="btn btn-primary mb-3">Create Invite</button>
    </form>

<!-- Display area for URL: Hide first, display when form submitted-->
    <div id="UrlDisplay" class="m-4" style = "display: none;">
        <h4 style = "text-align: center; color:#313D5A;">Event URL:</h4>
        <div class="input-group mb-3">
            <span id="icslink" class="input-group-text text-truncate" style="display: block;"> </span> <!-- eventurl returned from app.js-->
            <div class="input-group-append">
                <button class="btn btn-dark" type="button" onclick="copyUrl()">Copy</button>
            </div>
        </div>
    </div>
    </div>

</div>



<script>

    document.getElementById('eventForm').addEventListener('submit', function (event) {
        event.preventDefault();

        // Get form values
        const eventTitle = document.getElementById('eventTitle').value;
        var startDate = document.getElementById('startDate').value;
        startDate = startDate.replace(/-/g,"");
        var startTime = document.getElementById('startTime').value;
        startTime = startTime.replace(/:/g,"");
        startTime = startTime+"00";
        var endDate = document.getElementById('endDate').value;
        endDate = endDate.replace(/-/g,"");
        var endTime = document.getElementById('endTime').value;
        endTime = endTime.replace(/:/g,"");
        endTime = endTime+"00";
        const location = document.getElementById('location').value;
        const description = document.getElementById('description').value;

        // Create iCalendar (ICS) content
        const icsContent = 
        `BEGIN:VCALENDAR
VERSION:2.0
PRODID:github.com/jenchong235
BEGIN:VEVENT
UID:event${eventTitle}
CLASS:PUBLIC
DESCRIPTION:${description}
DTSTART:${startDate}T${startTime}
DTEND:${endDate}T${endTime}
LOCATION:${location}
SUMMARY:${eventTitle}
END:VEVENT
END:VCALENDAR`;

        const response = fetch('/submit', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ icsData: icsContent }),
        }).then((response) => {
    // Handler throws an error if the request did not succeed.
    if (!response.ok) {
      throw new Error(`HTTP error: ${response.status}`);
    }
    // If the response succeeded, handler fetches the response and return by `response.text()`.
    return response.text();
  }).then((text) => {
    document.getElementById('icslink').innerHTML = text
  })

        // Create a blob and download the file
        const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });
        const link = document.createElement('a');
        link.href = window.URL.createObjectURL(blob);
        link.download = eventTitle+'.ics';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

        // Show the display area for URL
        document.getElementById('UrlDisplay').style.display = 'block';
        

    });

 
    // Function to copy URL

    function copyUrl() {
        
        var urlText = document.getElementById("icslink").textContent;
        var tempTextarea = document.createElement('textarea');
        tempTextarea.value = urlText;
        document.body.appendChild(tempTextarea);
        tempTextarea.select();
        tempTextarea.setSelectionRange(0, 99999); /* For mobile devices */

        document.execCommand('copy');
        document.body.removeChild(tempTextarea);
        alert('Event URL copied to clipboard!');
    }

</script>

<script>
    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();

            document.querySelector(this.getAttribute('href')).scrollIntoView({
                behavior: 'smooth'
            });
        });
    });
</script>

</body>
</html>
